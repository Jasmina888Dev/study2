// array - массив - [] - набор данных
// массивдин методдору
// str.push() аркасына элемент кошот 1 пр
// str.pop() аркасына элемент кемитет 1 пр
// str.shift() алдынан элемент очурот 1 пр
// str.unshift() алдына элемент кошот 1 пр
// str.splice() 3 пр кабыл алат (тандайт,очурот,кошот)
// map() - 3 параметр кабыл алат (element, index, array) элементтерди озгортуу .дайыма массив кайтарат
// filter() - 3 параметр кабыл алат (element, index, array) филтирлеп керегин гана жаны массивге чыгарып берет
// some() true кайтарат эгер 1 элемент болсо да условиядан отсо болбосо false --------------------1
// find() элементти тапса ошол элементти кайтарат таппаса undefined ------------------------------1
// every() колбак функция баарын текшерип баары туура болсо true бироосу ката болсо да false  =========обьщий
// sort() колбак функцим 2 параметр кабыл алат (a, b) бул сартировка кылып берет
// reduce() 4 пр алат(acc,el,idx,arr)катарынан кошуп кетет. массивдин ичиндеги элементтерди кошууга жардам берет
// reduceRight() ушунун эле тескериси
// split() страканы массивке айлантырат 1 пр (сеператор" , ")           "" - []
// join() массивди стракага айлантырат кошуу  1 пр (сеператор " , ")    [] - ""
// includes() true and false
// `${}` --- интерпаляция

// ===-=-=-=-=-
// prompt()
// alert()
// -=-=-=-=-=-=

// 1  Дан массив ['a', 'b', 'c']. Добавьте ему в конец элементы 1, 2, 3.

// let arr = ["a", "b", "c"];
// arr.push(1, 2, 3);
// console.log(arr);

// 2 Даны два массива: [1, 2, 3] и [4, 5, 6]. Объедините их вместе.
// let arr = [1, 2, 3];
// arr.push(4,5,6)
// console.log(arr);

// 3 Дан массив [1, 2, 3]. Добавьте ему в конец элементы 4, 5, 6.
// let arr = [1,2,3]
// arr.push(4,5,6)
// console.log(arr);

// 4 Дан массив [1, 2, 3]. Добавьте ему в начало элементы 4, 5, 6.
// let arr = [1,2,3]
// arr.unshift(4,5,6)
// console.log(arr);

// 5 Дан массив ['js', 'css', 'jq']. Выведите на экран первый элемент.
// let arr = ["js", "css", "jq"];
// arr.splice(1, 3);
// console.log(arr);

// 6 Дан массив ['js', 'css', 'jq']. Выведите на экран последний элемент.
// let arr = ['js', 'css', 'jq']
// arr.splice(0,2)
// console.log(arr);

// 7  Дан массив [1, 2, 3, 4, 5]. С помощью метода slice запишите в
// новый элементы [1, 2, 3].
// let arr = [1, 2, 3, 4, 5];
// arr.slice(0, 3);
// console.log(arr);

// 8  Дан массив [1, 2, 3, 4, 5]. С помощью метода slice запишите в новый
// элементы [4, 5].
// let arr = [1, 2, 3, 4, 5];
// console.log(arr.slice(3, 5));

// 9  Дан массив [1, 2, 3, 4, 5]. С помощью метода splice преобразуйте
// массив в [1, 4, 5].
// let arr = [1, 2, 3, 4, 5];
// arr.splice(1,2)
// console.log(arr);

// 10  Дан массив [1, 2, 3, 4, 5]. С помощью метода splice запишите в
// новый массив элементы [2, 3, 4].
// let arr = [1, 2, 3, 4, 5];
// arr.splice(0,1)
// arr.splice(3,4)
// console.log(arr);

// 11  Дан массив [1, 2, 3, 4, 5]. С помощью метода splice сделайте из него
// массив [1, 2, 3, 'a', 'b', 'c', 4, 5].
// let arr = [1, 2, 3, 4, 5];
// arr.splice(3, 0, "a", "b", "c");
// console.log(arr);

// 12  Дан массив [1, 2, 3, 4, 5]. С помощью метода splice
// сделайте из него массив [1, 'a', 'b', 2, 3, 4, 'c', 5, 'e'].
// let arr = [1, 2, 3, 4, 5];
// arr.splice(1, 0, "a", "b");
// arr.splice(6,0, "c")
// arr.splice(8,0, "e")
// console.log(arr);

// home-work1
// Добавление и удаление элементов в конце массива:
//   Создайте массив с несколькими элементами. Используйте push для добавления нового элемента в конец массива,
// а затем pop, чтобы удалить последний элемент. Выведите массив после каждой операции.
//   Добавление и удаление элементов в начале массива:
//   Создайте массив с несколькими элементами. Используйте unshift для добавления нового элемента в начало массива,
//  а затем shift, чтобы удалить первый элемент. Выведите массив после каждой операции.

// Разделение массива:
// Создайте массив с несколькими элементами. Используйте pop для удаления последнего элемента, а затем shift,
// чтобы удалить первый элемент, и выведите новый массив.
// // Создать массив
// let fruits = ['яблоко', 'апельсин', 'груша'];
// fruits.pop()
// fruits.shift()
// console.log(fruits);

// // Добавить элемент в конец массива; // ['яблоко', 'апельсин', 'груша', 'банан']
// let arr = ["яблоко", "апельсин", "груша", "банан"];
// arr.splice(4,0 , "граната")
// console.log(arr);

// // Удалить последний элемент массива
// // ['яблоко', 'апельсин', 'груша']
// let arr = ["яблоко", "апельсин", "груша"];
// arr.pop()
// console.log(arr);
//
//
//
//
// let arr1 = [1, 2, 3];
// let arr2 = [4, 5, 6];
// console.log(arr1 , arr2);
//
//
//
//
// // Объединить два массива с помощью push
// // [1, 2, 3, 4, 5, 6]
//  Taalaibek Ymankulov, [2 дек. 2023 в 16:28]
// let numbers = [1, 2, 3, 4, 5];

// // Удалить последний элемент и добавить новый элемент в начало массива
// // [0, 1, 2, 3, 4]
// let queue = [0,1,2,3,4];
// queue.pop()
// queue.unshift(10,)
// console.log(queue);

// // Добавить элементы в очередь
// console.log(queue); // ['третий', 'второй', 'первый']
// let num = ["третий", "второй", "первый"];
// num.unshift("третий", "второй", "первый");
// console.log(arr.reverse());

// // Удалить элемент из очереди (первый добавленный)

// console.log(queue); // ['третий', 'второй']
// let numbers = [10, 20, 30, 40, 50];

// // Удалить один элемент, начиная с индекса 2
// // [10, 20, 40, 50]

// // Удалить три элемента, начиная с индекса 1
// // [10]
// let colors = ['красный', 'зеленый', 'синий'];

// // Вставить 'желтый' на место индекса 1, удалить 0 элементов
// // ['красный', 'желтый', 'зеленый', 'синий']
// let colors = ['красный', 'зеленый', 'синий'];

// // Заменить 'зеленый' на 'фиолетовый'
// // ['красный', 'желтый', 'фиолетовый', 'синий']
// let cars = ['Мерседес', 'БМВ', 'Ауди'];

// // Добавить два элемента ('Фольксваген' и 'Тойота') начиная с индекса 1
// // ['Мерседес', 'Фольксваген', 'Тойота', 'БМВ', 'Ауди']
// let colors = ['красный', 'желтый', 'синий'];

// // Заменить один элемент на другой, начиная с индекса 0
// // ['фиолетовый', 'желтый', 'синий']
// let fruits = ['яблоко', 'груша', 'апельсин', 'банан'];

// // Удалить два элемента начиная с индекса 1 и сохранить их в новом массиве
// // ['груша', 'апельсин']

// home-work2
// 1.Добавление и удаление элементов в конце массива:
// Создайте массив с несколькими элементами. Используйте push для добавления
// нового элемента в конец массива, а затем pop, чтобы удалить последний
// элемент. Выведите массив после каждой операции.
// let arr = ["jasmina, jasmin, jasi"]
// arr.push("jassii" , "jas")
// arr.pop()
// console.log(arr);

// 2.Добавление и удаление элементов в начале массива:
// Создайте массив с несколькими элементами. Используйте unshift для
// добавления нового элемента в начало массива, а затем shift, чтобы удалить
// первый элемент. Выведите массив после каждой операции.
// let arr = ["asman", "bulut", "jyldyz"]
// arr.unshift("ai", "kok asman", "achyk asman")
// arr.shift()
// console.log(arr);

// 3.Разделение массива:
// Создайте массив с несколькими элементами. Используйте pop для удаления
// последнего элемента, а затем shift, чтобы удалить первый элемент, и
// выведите новый массив.
// let arr = ["green", "yellow", "white"]
// arr.pop()
// arr.shift()
// console.log(arr);

// 4.Создать массив
// Добавить элемент в конец массива; // ['яблоко', 'апельсин', 'груша', 'банан']
// let fruits = ['яблоко', 'апельсин', 'груша'];
// fruits.push("банан")
// console.log(fruits);

// 5.Удалить последний элемент массива
// ['яблоко', 'апельсин', 'груша']
// let arr = ["яблоко", "апельсин", "груша"];
// arr.pop()
// console.log(arr);

// 6.Объединить два массива с помощью push
// let arr1 = [1, 2, 3];
// let arr2 = [4, 5, 6];
// [1, 2, 3, 4, 5, 6]
// let arr = [1, 2, 3,]
// arr.push(4, 5, 6,)
// console.log(arr);

// 7.let numbers = [1, 2, 3, 4, 5];
// Удалить последний элемент и добавить новый элемент в начало массива
// [0, 1, 2, 3, 4]
// let arr =[9, 8, 7, 6, 5,]
// arr.pop()
// arr.unshift(11, 10)
// console.log(arr);

// Добавить элементы в очередь
// ['третий', 'второй', 'первый']
// let arr = ['третий', 'второй', 'первый'];
// arr.shift()
// arr.unshift("первый")
// arr.pop()
// arr.push("третий")
// console.log(arr);

// 9.Удалить элемент из очереди (первый добавленный)
// ['третий', 'второй']
// let arr = ["третий", "второй"];
// arr.shift()
// arr.unshift("первый")
// arr.push("третий")
// console.log(arr);

// 10.let numbers = [10, 20, 30, 40, 50];
// Удалить один элемент, начиная с индекса 2
// let arr = [10, 20, 30, 40, 50];
// arr.splice(2,2, 40);
// console.log(arr);

// [10, 20, 40, 50]
// Удалить три элемента, начиная с индекса 1
// let arr = [10,]
// arr.splice(1)
// console.log(arr);

// [10]

// 11.Вставить 'желтый' на место индекса 1, удалить 0 элементов
// ['красный', 'желтый', 'зеленый', 'синий']
// let colors = ["красный", "зеленый", "синий"];
// colors.splice(1,0, "желтый")
// console.log(colors);

// 12.let colors = ["красный", "зеленый", "синий"];
// Заменить 'зеленый' на 'фиолетовый'
// ['красный', 'желтый', 'фиолетовый', 'синий']
// let arr = ["красный", "зеленый", "синий"];
// arr.splice(1,1, "желтый", "фиолетовый")
// console.log(arr);

// 13.Добавить два элемента ('Фольксваген' и 'Тойота') начиная с индекса 1
// ['Мерседес', 'Фольксваген', 'Тойота', 'БМВ', 'Ауди']
// let cars = ["Мерседес", "БМВ", "Ауди"];
// cars.splice(1, 0, "Фольксваген", "Тойота");
// console.log(cars);

// 14.Заменить один элемент на другой, начиная с индекса 0
// ['фиолетовый', 'желтый', 'синий']
// let colors = ["красный", "желтый", "синий"];
// colors.shift();
// colors.unshift("фиолетовый");
// console.log(colors);

//15. Удалить два элемента начиная с индекса 1 и сохранить их в новом массиве
// ['груша', 'апельсин']
// let fruits = ["яблоко", "груша", "апельсин", "банан"];
// let arr = ["груша", "апельсин"];
// fruits.splice(1, 2);
// console.log(fruits);

//------------------------------------------------------------------------------------------------------------------------------------------------------
//======================================================================================================================================================
//
//
// map() - 3 параметр кабыл алат (element, index, array) элементтерди озгортуу .дайыма массив кайтарат
// filter() - 3 параметр кабыл алат (element, index, array) филтирлеп керегин гана жаны массивге чыгарып берет

// map()

// let arr = [11,22,45,34,55,655,]
// console.log(arr.map((el) => {
//     return el;
// }));

// let arrNum = [2,3,4,5,6,7,8]
// console.log(arrNum.map((el) => {
//     return el > 2
// }));

// let arrName = ["jasmina","jasmin","jasi","jas"]
// console.log(arrName.map((el) => {
//      return el.slice(-1)
// }));

// let arrName = ["jasmina", "jasmin", "jasi", "jas"];
// console.log(arrName.map((el) => {
//     if (el.length > 4) {
//         return el.toUpperCase()
//     } else {
//         return el
//     }
// }));

//
//
//
//
// filter()
// let arrNum = [2, 3, 4, 5, 6, 7, 8];
// console.log(arrNum.filter((element, index, array) => {
//     return element > 5
// }));

// let arrNum = [2, 3, 4, 5, 6, 7, 8];
// console.log(arrNum.filter((el) => {
//     return el % 2 === 0
// }));

// let arr = ["jasmin", "gulnaz", "saliha", "zaripa", "ali"]
// console.log(arr.filter((el) => {
//     return el.length > 5
// }));

// let arr = ["Bilal", "Bekzat", "Begimai", "Benazir", "jasmina"]
// console.log(arr.filter((el) => {
//     return el[0] === "B"
// }));

//
//
//
//
// exercise + homework
// Во всех задачах используйте только методы map, filter.

// 1. Вам дан массив: [315, 64, 75, 43, 65, 63].Найдите сумму каждого числа.
// let arrNum = [315, 64, 75, 43, 65, 63];
// console.log(arrNum.map((el) => {
//     return el + el
// }));

// 2. Вам дан массив: ['Аскар', 'Баяман', 'Калмамат']. Создайте функцию,
// изменяющую букву а в каждом имени на я и выведите в консоль.
// let arr = ["Аскар", "Баяман", "Калмамат"];
// console.log(arr.map((el) => {
//     return el.replace("а", "я")
// }));

// 3. Вам дан массив: ['Аскар', 'Баяман', 'Калмамат']. Создайте функцию,
// которая выводит только те имена, где есть буква к и выведите в консоль.
// let arr = ["Аскар", "Баяман", "Калмамат"];
// console.log(arr.filter((el) => {
//     return el.includes("к") || el.includes("К")
// }));

// 4. Вам дан массив: [4, 54, 49]. Сделайте из него массив, состоящий из квадратов этих чисел.
// let arr = [4, 54, 49];
// console.log(arr.map((el) => {
//     return el * 2
// }));

// 5. Вам дан массив [3134, 4, -143, -245, -214]. Оставьте в нем только отрицательные числа.
// let arr = [3134, 4, -143, -245, -214];
// console.log(arr.filter((el) => {
//     return el < 0
// }));

// 6. Вам дан массив [3, 51, 30, 54, 60]. Оставьте в нем только четные числа.
// let arr = [3, 51, 30, 54, 60];
// console.log(arr.filter((el) => {
//     return el % 2 ===0
// }));

// 7. Вам дан массив ['Бегимай', 'Баяман', 'Калмамат']. Оставьте в нем только те строки, длина которых больше 5-ти символов.
// let arr = ["Бегимай", "Баяман", "Калмамат", "али"];
// console.log(
//   arr.filter((el) => {
//     return el.length > 5; 
//   })
// );

// 8. Вам дан массив [-13, 96, -41, -28, 40]. Посчитайте количество отрицательных чисел в этом массиве.
// let arr = [-13, 96, -41, -28, 40];
// console.log(
//   arr.filter((el) => {
//     return el < 0;
//   }).length
// );

// 9. Вам дан массив [3, 51, -30, -54, 60]. Оставьте в нем только положительные числа. Затем извлеките
//  квадратный корень из этих чисел, если эти числа больше 30.
// let arr = [3, 51, -30, -54, 60];
// console.log(
//   arr.filter((el) => {
//     return el > 0
//   }) .map((el) => {
//     el > 30
//   }) .map((el) => {
//     Math.sqrt(el)
//   })
// );

// let arr = [3, 51, -30, -54, 60];
// let num = arr.filter((el) => el > 0);
// let result = num.filter((el) => el > 30)
// .map((el) => Math.sqrt(el));
// console.log(result);

// 11. Вам дан массив [NaN, 0, 77, false, -17, '',undefined, 99, null]. Создайте функцию, которая очищает массив от
// ложных (false) значений: false, null, undefined, 0, –0, NaN и "" (пустая строка).
// let arr = [NaN, 0, 77, false, -17, "", undefined, 99, null];
// function task11(arr) {
//     return arr.filter((el) => {
//         return el
//     })
// }
// console.log(task11([NaN, 0, 77, false, -17, "", undefined, 99, null]));

// 12. Вам дан массив ['Бегимай', 'Баяман', 'Калмамат']. Выведите длину каждой строки.
// let arr = ["Бегимай", "Баяман", "Калмамат"];
// console.log(arr.map((el) => {
//     return el.length
// }));

// 9
// 8

// exercise 2

// 1. Вам дан массив с строками ['асКар', 'бЯяман', 'калМмамат']. Используйте заглавные буквы в каждом массиве имен.
// Пример: (["john", "JACOB", "jinGleHeimer", "schmidt"])), => ["John", "Jacob", "Jingleheimer", "Schmidt"]
// let arr = ["асКар", "баяман", "калмамат"];
// console.log(
//   arr.map((el) => {
//     return el[0].toLocaleUpperCase() + el.slice(1).toLowerCase()
//   })
// );

// 2. Преобразование данных
// Создайте массив чисел и используйте метод map(), чтобы преобразовать числа в строковый формат с добавлением символа "$" в начале каждой строки.
// let prices = [10, 20, 30, 40, 50];
// console.log(prices.map((el) => {
//   return el + "&"
// }));

// 3. Использование map() для удвоения значений в массиве:
// // [2, 4, 6, 8, 10]
// let numbers = [1, 2, 3, 4, 5];
// console.log(numbers.map((el) => {
//   return el * 2
// }));

// 4. Использование filter() для фильтрации строк по содержанию подстроки:
// 'ap'
// // ['apple', 'apricot']
// let words = ['apple', 'banana', 'grape', 'apricot', 'orange'];
// console.log(words.filter((el) => {

//   return el[0] === "a"
// }
// ));

// 5. Использование map() для создания нового массива с квадратами чисел:
// // [1, 4, 9, 16, 25]
// let numbers = [1, 2, 3, 4, 5];
// console.log(numbers.map((el) => {
//   return el
// }));

// 6. Использование map() для добавления индексов к элементам массива:
// let colors = ['красный', 'зеленый', 'синий'];
// // ['1. красный', '2. зеленый', '3. синий']

//-------------------------------------------------------------------------------------------------------------------------------------------------
//=================================================================================================================================================
//
// some() true and false
// find() элементти тапса ошол элементти кайтарат таппаса undefined

//
//
//
// 1. Проверка наличия элементов, удовлетворяющих условию
// Используйте метод some(), чтобы проверить, есть ли в массиве хотя бы один элемент, удовлетворяющий определенному условию.
// let numbers = [10, 5, 8, 22, 3];
// console.log(numbers.some((el) => {

// }));

// 2. Проверка наличия элемента больше определенного порога
// Используйте метод some(), чтобы проверить, есть ли в массиве хотя бы один элемент больше 15
// let numbers = [10, 5, 8, 22, 3];
// console.log(
//   numbers.some((el) => {
//     return el > 15;
//   })
// );

// 3. Проверка наличия строк, содержащих определенную букву
// Используйте метод some(), чтобы проверить, есть ли в массиве строк хотя бы одна строка, содержащая определенную букву “a”
// let words = ["apple", "banana", "cherry", "date"];
// console.log(
//   words.some((el) => {
//     return el.includes("a");
//   })
// );

// 4. Поиск элемента по индексу
// Создайте массив чисел и используйте метод find() для нахождения элемента по его индексу 2
// let numbers = [10, 20, 30, 40, 50];
// console.log(
//   numbers.find((el, idx) => {
//     return idx === 2;
//   })
// );

// 5. Поиск элемента с использованием функции-коллбэка
// Создайте массив строк и используйте метод find(), чтобы найти первую строку, которая начинается с "b" определенной буквы.
// let words = ["apple", "banana", "cherry", "date"];
// console.log(words.find((el) => {
//   return el.includes("b")
// }));

// 6. Поиск элемента в массиве
// Создайте массив чисел и используйте метод find(), чтобы найти первый элемент, который больше  25 определенного порогового значения.
// let numbers = [10, 20, 30, 40, 50];
// console.log(numbers.find((el) => {
//   return el > 25
// }));

//
//
//
//
//
//

//
// 1. Вам дан массив с строками ['асКар', 'бЯяман', 'калМмамат']. Используйте заглавные буквы в каждом массиве имен.
// Пример: (["john", "JACOB", "jinGleHeimer", "schmidt"])), => ["John", "Jacob", "Jingleheimer", "Schmidt"]
// let words = ["асКар", "бЯяман", "калМмамат"];
// console.log(
//   words.map((el) => {
//     return el[0].toUpperCase() + el.slice(1).toLowerCase()
//   })
// );

// 2. Преобразование данных
// Создайте массив чисел и используйте метод map(), чтобы преобразовать числа в строковый формат с добавлением символа "$" в начале каждой строки.
// let prices = [10, 20, 30, 40, 50];
// console.log(
//   prices.map((el) => {
//     return el + "$";
//   })
// );

// 3. Использование map() для удвоения значений в массиве:
// // [2, 4, 6, 8, 10]
// let numbers = [1, 2, 3, 4, 5];
// console.log(
//   numbers.map((el) => {
//     return el * 2;
//   })
// );

// 4. Использование filter() для фильтрации строк по содержанию подстроки:
// 'ap'
// // ['apple', 'apricot']
// let words = ['apple', 'banana', 'grape', 'apricot', 'orange'];
// console.log(words.filter((el) => {
//     return el[0] === "a"
// }));

// 5. Использование map() для создания нового массива с квадратами чисел:
// // [1, 4, 9, 16, 25]
// let numbers = [1, 2, 3, 4, 5];
// console.log(numbers.map((el) => {
//     return el * el
// }));

// 6. Использование map() для добавления индексов к элементам массива:
// // ['1. красный', '2. зеленый', '3. синий']
// let colors = ["красный", "зеленый", "синий"];
// console.log(
//   colors.map((el, index) => {
//     return `${index + 1} ${el}`;
//   }, 1)
// );

//----------------------------------------------------------------------------------------------------------------------------------------------------------
//==========================================================================================================================================================
//
//
//
//
//
//
//
// every() колбак функция баарын текшерип баары туура болсо true бироосу ката болсо да false
// sort() колбак функцим 2 параметр кабыл алат (a, b) бул сартировка кылып берет
//
// let str = [2, 333, 4, 56, 777, 76];
// console.log(
//   str.sort((a, b) => {
//     return a - b;
//   })
// );

// console.log("j".charCodeAt(0));

// 1. Найти первый элемент в массиве, который больше 10.

// 2. Проверить, все ли элементы массива являются положительными числами.
// let num = [-10, -90,12, 34, 67,45, 0, 90,]
// console.log(num.find((el) => {
//     return el > 0
// }));

// 3. Проверить, есть ли в массиве хотя бы один элемент, равный 0.
// let num = [34, 56, 0, 67];
// console.log(
//   num.some((el) => {
//     return el === 0;
//   })
// );

// 4. Найти первое четное число в массиве.
// let num = [ 12, 34, 67, 45, 0, 90];
// console.log(
//   num.find((el) => {
//     return el % 2 === 0
//   })
// );

// 5. Проверить, все ли строки в массиве содержат более 5 символов.
// let str = ["jasmi", "motio", "kyrgy"];
// console.log(
//   str.every((el) => {
//     return el.length === 5;
//   })
// );

// 6. Проверить, есть ли в массиве хотя бы одно отрицательное число.
// let num2 = [-17,45,67,89,90]
// console.log(num2.some((el) => {
//     return el < 0
// }));

// 7. Найти первую строку в массиве, которая начинается с буквы "A".
// let str = ["Ananas", "Alma", "banan"]
// console.log(str.filter((el) => {
//     return el.includes("A")
// }));

// 8. Проверить, все ли элементы массива являются четными числами.
// let num = [12, 34, 46,  90];
// console.log(num.every((el) => {
//     return el % 2 === 0
// }));

// 10. Найти первый элемент массива, который делится на 3 без остатка.
// let num = [9,30,15,27]
// console.log(num.find((el) => {
//     return el % 3 === 0
// }));

// 11. Проверить, все ли элементы массива больше 0.
// let num = [9, 30, 15, 27];
// console.log(
//   num.every((el) => {
//     return el > 0;
//   })
// );

// 13. Найти первый элемент массива, который меньше 5.
// let num = [5, 6, 7, 2, 4]
// console.log(num.find((el) => {
//     return el < 5
// }));

// 15. Проверить, есть ли в массиве хотя бы один элемент, равный "apple".
// let str = ["apple", "javascript","html",]
// console.log(str.find((el) => {
//     return el === "apple";
// }));

// 16. Найти первый элемент массива, который содержит подстроку "let str = ["javascript"]
// let str = ["jjbhijavascript", "dcvguidbhc", "yhducgvd"]
// console.log(str.find((el) => {
//     return el.includes("javascript")
// }));

// 17. Проверить, все ли элементы массива положительны.
// let num = [12, 34, 56, 78];
// console.log(
//   num.every((el) => {
//     return el > 0;
//   })
// );

// 18. Проверить, есть ли в массиве хотя бы одна строка, длина которой больше 10 символов.
// let str = ["dfgstradsffg","fg","kdjuds"]
// console.log(str.find((el) => {
//     return el.length > 10
// }));

// 19. Найти первый элемент массива, который является нечетным числом.
// let num = [45, 34,67]
// console.log(num.find((el) => {
//     return el % 2 === 0
// }));

// 20. Проверить, все ли элементы массива являются отрицательными числами.
// let num = [-34,-96,-678,-456,]
//     console.log(num.every((el) => {
//         return el < 0
//     }));

// 21. Проверить, есть ли в массиве хотя бы один элемент, равный "banana".
// let str = ["apple", "javascript","html", "banana"]
// console.log(str.find((el) => {
//     return el === "banana";
// }));

// 23. Проверить, все ли элементы массива являются кратными 4 числами.
// let num = [44,40,8,16]
// console.log(num.every((el) => {
//     return el % 4 === 0
// }));

// 25. Найти первый элемент массива, который больше 100.
// let num = [90, 102, 100, 10];
// console.log(
//   num.find((el) => {
//     return el > 100;
//   })
// );

// 27. Проверить, есть ли в массиве хотя бы одна строка, заканчивающаяся на "tion".
// let str = ["motion", "information"];
// console.log(
//   str.some((el) => {
//     return el.includes("tion");
//   })
// );

// ------------------------------------------------------------------------------------------------------------------------------------------------
//=================================================================================================================================================
//
//
//
// reduce() 4 пр алат(acc,el,idx,arr)катарынан кошуп кетет. массивдин ичиндеги элементтерди кошууга жардам берет
// reduceRight() ушунун эле тескериси
// split() страканы массивке айлантырат 1 пр (сеператор" , ")
// join() массивди стракага айлантырат кошуу  1 пр (сеператор " , ")

//
//
//
//
//
//
// exercise 1
// Во всех задачах используйте только методы map, reduce.

// 1. Вам дан массив с числами [5,15,315,2,13,20,9]. Найдите сумму этих чисел.
// let num = [5, 15, 315, 2, 13, 20, 9];
// console.log(num.reduce((acc,el) => {
//     return acc + el
// }));

// 2. Вам дан массив с числами [5,12,314,2,13,20,9]. Найдите сумму всех четных чисел.
// let num = [5, 12, 314, 2, 13, 20, 9];
// console.log(num.reduce((acc, el) => {
//     return el % 2 === 0 ? acc+el : acc
// }, 0)
// );

// 3. Вам дан массив с числами [5,15,315,2,13,20,9]. Найдите сумму чисел, которые больше 10.
// let num1 = [5, 15, 315, 2, 13, 20, 9];
// console.log(num2.reduce((acc, el) => {
//     return el > 10 ? acc + el : acc
// }, 0));

// 4. Вам дан массив с числами [3,13,54,15,335, 39]. Найдите разность чисел, которые больше  10.
// let num2 = [3, 13, 54, 15, 335, 39];
// console.log(num2.reduce((acc, el) => {
//     return  el > 10 ? acc - el : acc
// }, 0));

// 5. Вам дан массив с строками ['Аскар', 'Баяман', 'Калмамат']. Сложите все строки и выведите длину результата.
// let str = ["Аскар", "Баяман", "Калмамат"];
// console.log(str.reduce((acc, el) => {
//     return acc+el
// }).length);

// 6. Вам дан массив с строками ['Аскар', 'Баяман', 'Калмамат']. Выведите все строки в верхнем регистре, используя map.
// let str = ["Аскар", "Баяман", "Калмамат"];
// console.log(str.map((el) => {
//     return el.toUpperCase()
// }));

// 7. Вам дан массив с строками ['Аскар', 'Баяман', 'Калмамат']. Выведите все вторые строки в верхнем регистре.
// let str1 = ["Аскар", "Баяман", "Калмамат","ugfyewu","dcfvgbh","xctvygh","etrytuyi"];
// console.log(str1.map(( el, index) => {
//   return index % 2 !==0 ? el.toUpperCase() : el;
// }));

// 14. Вам дан массив с числами [5, -54, 13, -7, 45, -15, -34]. Верните сумму всех отрицательных чисел, которые больше 10.
// let num = [5, -54, 13, -7, 45, -15, -34];
// console.log(num.reduce((acc,el) => {
//     return  el < 0 ? acc + el : acc
// }, 0));

// 15. Вам дан массив с числами [1, 65, 13 , 30, 100] - все числа - доллары. Вам нужно обменять эти доллары по курсу сома и вывести все числа в сомах.
// let num = [1, 65, 13, 30, 100];
// console.log(num.map((el) => {
//   return el * 87
// }));

// 17. Вам дан массив с строками ['Оскар', 'Баяман', 'Калмамат']. Добавьте к каждой строке нумерацию.
// let str = ['Оскар', 'Баяман', 'Калмамат']
// console.log(str.map((el,idx) => {
//   return `${idx+1} ${el}`
// }, 1));

//
//
//
// exercise 2
// 1.Преобразование чисел в строку
// Создайте массив чисел и используйте метод join() для преобразования их в строку, разделенную запятой.
// let numbers = [1, 2, 3, 4, 5];
// console.log(numbers.join(","));

// 2. Объединение пути к файлу
// Создайте массив строк, представляющих части пути к файлу, и используйте метод join() для объединения их в один путь.
// let pathParts = ["folder", "subfolder", "file.txt"];
// console.log(pathParts.join('/'));

// 3. Разделение строки по пробелам
// Разделите строку на массив слов, используя пробел в качестве разделителя.
// let sentence = "Это пример разделения строки на слова";
// let str = "Это пример разделения строки на слова";
// console.log(str.split(" "));

// 4. Разделение строки по запятой
// Разделите строку, содержащую перечень элементов, разделенных запятыми, на массив элементов.
// let items = "apple, banana, cherry, date";
// console.log(items.split(","));

// exercise 3
//
//
//
//
// Задача 1: Разделение строки на слова
// Напишите функцию splitWords(str), которая принимает строку str и возвращает массив слов. Считайте, что слова разделены пробелами.
// // Ожидаемый результат: ["JavaScript", "is", "awesome"]

// Задача 2: Разделение строки на символы
// Напишите функцию splitCharacters(str), которая принимает строку str и возвращает массив всех символов строки.
// // Ожидаемый результат: ["h", "e", "l", "l", "o"]
// let a = "h, j, k, f, g, h,"
// console.log(a.split(" "));

// Задача 3: Сумма чисел из строки
// Напишите функцию sumNumbers(str), которая принимает строку из чисел, разделенных запятыми, и возвращает их сумму.
// sumNumbers("5,10,15,20");
// // Ожидаемый результат: 50
// let num = [5,10,15,20]
// console.log(num.reduce((acc,el) => {
//     return acc + el
// }));

// Задача 4: Обратный порядок слов
// Напишите функцию reverseWords(str), которая принимает строку str и возвращает новую строку, где слова идут в обратном порядке.
// reverseWords("Hello world from JavaScript");
// // Ожидаемый результат: "JavaScript from world Hello"
// let str = ["Hello", "world" ,"from" ,"JavaScript"];
// console.log(str.reduceRight((acc, el) => {
//     return acc + " " + el
// }).split());

// Задача 5: Получение расширения файла
// Напишите функцию getFileExtension(filename), которая принимает строку с именем файла и возвращает его расширение. Считайте, что файл всегда имеет расширение.
// getFileExtension("document.pdf");
// // Ожидаемый результат: "pdf"
// function task1(str) {
//   return str.split(".")[1]
// }
// console.log(task1("document.pdf"));

// Задача 6: Первые буквы слов

// Напишите функцию getFirstLetters(str), которая принимает строку,
// состоящую из нескольких слов, и возвращает строку
// , состоящую из первых букв каждого слова.
// Пример:
// getFirstLetters("Hello amazing world");
// Ожидаемый результат: "Haw"
// function getFirstLetters(str) {
//   let words = str.split(" ");
//   let firstLetters = words.map((word) => word[0]);
//   return firstLetters.join("");
// }
// console.log(getFirstLetters("Hello amazing world sugu jdio husa uuuuuuuuu "));

// Задача 7: Подсчет слов в строке
// Напишите функцию countWords(str), которая принимает строку и возвращает количество слов в ней. Считайте,
// что слова разделены пробелами и других разделителей нет.
// Пример:
// countWords("JavaScript is fun to learn");
// // Ожидаемый результат: 5
// function countWords(str) {
//   let words = str.trim().split(" ");
//   return words.filter((word) => word !== "").length;
// }
// console.log(countWords("JavaScript is fun to learn"));

// 14.11.2024 -------------------------------------------------------------------------------------------------------------------------------------------------
//===========================================================================================================================================================
//экзаменный задачи 😉
//
// exercise 1
// 2. Найти минимальное значение в массиве
// Дан массив чисел. Напишите функцию, которая находит минимальное значение в массиве, используя только reduce.
// const arr = [5, 3, 8, 1, 9, 6, -18];
// function task(num) {
//     return num.reduce((acc,el) => {
//         return acc < el ? acc : el
//     })
// }
// console.log(task(arr));

// 3. Найти максимальное значение в массиве
// Дан массив чисел. Напишите функцию, которая находит максимальное значение в массиве, используя только reduce.
// const arr = [5, 3, 8, 1, 9, 6];
// function task(num) {
//   return num.reduce((acc, el) => {
//     return acc > el ? acc : el;
//   });
// }
// console.log(task(arr));

// 4. Умножение всех чисел в массиве
// Дан массив чисел. Напишите функцию, которая возвращает произведение всех чисел, используя только reduce.
// const arr = [1, 2, 3, 4];
// function task2(num) {
//     return num.reduce((acc, el) => {
//         return acc * el
//     })
// }
// console.log(task2(arr));

// 5. Подсчет количества положительных чисел в массиве
// Дан массив чисел. Напишите функцию, которая подсчитывает количество положительных чисел в массиве, используя только reduce.
// const arr = [1, -2, 3, -4, 5, 10];
// function task4(num) {
//     return num.reduce((acc, el) => {
//         return el > 0 ? acc + 1 : acc
//     }, 0)
// }
// console.log(task4(arr));

// 6. Подсчет количества отрицательных чисел в массиве
// Дан массив чисел. Напишите функцию, которая подсчитывает количество отрицательных чисел в массиве, используя только reduce.
// const arr = [1, -2, 3, -4, 5];
// function task4(num) {
//     return num.reduce((acc, el) => {
//         return el < 0 ? acc + 1 : acc
//     }, 0)
// }
// console.log(task4(arr));

// 7. Подсчет общего количества символов в массиве строк
// Дан массив строк. Напишите функцию, которая возвращает общее количество символов во всех строках, используя только reduce.
// const words = ["apple", "banana", "cherry"];
// function task5(str) {
//   return str.reduce((acc, el) => {
//     return acc + el.length;
//   }, 0);
// }
// console.log(task5(words));

// 8. Преобразование массива чисел в массив их квадратов
// Дан массив чисел. Напишите функцию, которая возвращает массив чисел, являющихся квадратами чисел из исходного массива, используя только reduce.
// const arr = [1, 2, 3, 4];
// function task6(num) {
//   return num.reduce((acc, el) => {
//     acc.push(el * el);
//     return acc;
//   }, []);
// }
// console.log(task6(arr));

// 9. Преобразование массива строк в массив их длин
// Дан массив строк. Напишите функцию, которая возвращает массив длин этих строк, используя только reduce.
// const words = ["apple", "banana", "cherry"];
// function task8(str) {
//   return str.reduce((acc, el) => {
//     acc.push(el.length);
//     return acc;
//   }, []);
// }
// console.log(task8(words));

// 10. Получить все уникальные элементы из массива
// Дан массив чисел. Напишите функцию, которая возвращает массив уникальных элементов, используя только reduce.
// const arr = [1, 2, 2, 3, 4, 4, 5];
// function task10(num) {
//     return num.reduce((acc, el) => {
//         if (!acc.includes(el)) {
//         acc.push(el)
//         return acc
//         } else {
//             return acc
//         }
//     }, [])
// }
// console.log(task10(arr))

// Дан массив строк с названиями городов. Напиши функцию, которая принимает этот массив и возвращает новый массив, содержащий только
// те города, которые начинаются с буквы "А" (регистр не имеет значения), но с названием в верхнем регистре.
// Ожидаемый результат: ["АЛМАТЫ", "АСТАНА", "АСТРАХАНЬ"]
// let cities = ["Алматы", "Бишкек", "Астана", "Москва", "астрахань", "Ташкент"];
// function task13(str) {
//   return str
//     .filter((el) => {
//       return el[0].toUpperCase() === "а";
//     })
// }
// console.log(task13(cities));

// switch case

// let color = "red";
// switch (color) {
//   case "yellow":
//     console.log("daiardan!");
//     break;
//   case "red":
//     console.log("tokto!");
//     break;
//   case "green":
//     console.log("otober!");
//     break;
//   default:
//     console.log("error");
//     break;
// }

